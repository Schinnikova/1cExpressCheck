#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Заполнение списка схем компоновки данных
	ПризнакПредопределенногоМакета = Врег("Предопределенный");
	ДлинаПризнакаПредопределенногоМакета = СтрДлина(ПризнакПредопределенногоМакета);
	Для Каждого Макет Из Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).Макеты Цикл
		Если Макет.ТипМакета = Метаданные.СвойстваОбъектов.ТипМакета.СхемаКомпоновкиДанных Тогда
			Если ВРег(Прав(Макет.Имя, ДлинаПризнакаПредопределенногоМакета)) = ПризнакПредопределенногоМакета Тогда
				Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить(Макет.Имя, Макет.Синоним);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольный'"));

	Адреса = АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище();

	АдресСхемыКомпоновкиДанных = Адреса.СхемаКомпоновкиДанных;
	АдресНастроекКомпоновкиДанных = Адреса.НастройкиКомпоновкиДанных;

	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	ОписаниеТекстАлгоритма = "//Доступные параметры: ТаблицаОшибок.
							|// пример:
 							|Для каждого Стр из ТаблицаОшибок Цикл
							|// текст обработки
							|КонецЦикла;";

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если НЕ ЗначениеЗаполнено(Объект.СхемаКомпоновкиДанных) Тогда
		Если НЕ ПустаяСтрока(АдресСхемыКомпоновкиДанных) Тогда
			ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных));
		Иначе
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Необходимо настроить отчет для экспресс-проверки.'"), Объект.Ссылка, "Объект.СхемаКомпоновкиДанных",,Отказ);
		КонецЕсли;
	Иначе
		ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;

	Если НЕ ПустаяСтрока(АдресНастроекКомпоновкиДанных) Тогда
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
	Иначе
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтотОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СхемаКомпоновкиДанныхПриИзменении(Элемент)

	СхемаКомпоновкиДанныхПриИзмененииНаСервере();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанных(Команда)

	// Открыть редактор настроек схемы компоновки данных
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru = 'Настройка отчета ""%1""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ЗаголовокФормыНастройкиСхемыКомпоновкиДанных, "%1", Объект.Наименование);

	//@skip-check structure-consructor-too-many-keys
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
						"НеПомещатьНастройкиВСхемуКомпоновкиДанных,
						|НеРедактироватьСхемуКомпоновкиДанных,
						|НеНастраиватьУсловноеОформление,
						|НеНастраиватьВыбор,
						|НеНастраиватьПорядок,
						|УникальныйИдентификатор,
						|АдресСхемыКомпоновкиДанных,
						|АдресНастроекКомпоновкиДанных,
						|Заголовок,
						|ИсточникШаблонов,
						|ИмяШаблонаСКД,
						|ВозвращатьИмяТекущегоШаблонаСКД",
						Истина,
						Ложь,
						Истина,
						Истина,
						Истина,
						УникальныйИдентификатор,
						АдресСхемыКомпоновкиДанных,
						АдресНастроекКомпоновкиДанных,
						ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
						Объект.Ссылка,
						Объект.СхемаКомпоновкиДанных,
						Истина),,,,, Новый ОписаниеОповещения("РедактироватьСхемуКомпоновкиДанныхЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Асинх Процедура ПроверитьОтчет(Команда)

	Если Модифицированность Тогда
		Ответ = Ждать ВопросАсинх(НСтр("ru = 'Необходимо записать данные перед проверкой отчета. Продолжить?'"), РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		Записать();
	КонецЕсли;
	
	// добавляем параметры в пользовательские настройки
	НастройкиОтчета = ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных);
	Для Каждого ПараметрОтчета Из НастройкиОтчета.ПараметрыДанных.Элементы Цикл
		Если ПараметрОтчета.Использование И ПараметрОтчета.ИдентификаторПользовательскойНастройки = "" Тогда
			ПараметрОтчета.ИдентификаторПользовательскойНастройки = Новый УникальныйИдентификатор;
		КонецЕсли;
	КонецЦикла;

	Парам = Новый Структура;
	Парам.Вставить("АдресСхемы", АдресСхемыКомпоновкиДанных);
	Парам.Вставить("Вариант", НастройкиОтчета);
	Парам.Вставить("КлючВарианта", Строка(Объект.Ссылка.УникальныйИдентификатор()));

	ОткрытьФорму("Отчет.ЭП_ПроизвольнаяРасшифровка.Форма", Парам, ЭтотОбъект, УникальныйИдентификатор);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура СхемаКомпоновкиДанныхПриИзмененииНаСервере()

	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(Справочники.ЭП_ОписанияПроверок.ПолучитьМакет(Объект.СхемаКомпоновкиДанных), Новый УникальныйИдентификатор());
	АдресНастроекКомпоновкиДанных = "";

	Элементы.СхемаКомпоновкиДанных.СписокВыбора.Удалить(Элементы.СхемаКомпоновкиДанных.СписокВыбора.НайтиПоЗначению(""));

КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанныхЗавершение(Результат, ДополнительныеПараметры) Экспорт

	АдресаНастроек = Результат;

	Если ЗначениеЗаполнено(АдресаНастроек) Тогда
		Если ПустаяСтрока(АдресаНастроек.ИмяТекущегоШаблонаСКД)
			И Элементы.СхемаКомпоновкиДанных.СписокВыбора.НайтиПоЗначению("") = Неопределено Тогда
			Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольный'"));

		КонецЕсли;

		Объект.СхемаКомпоновкиДанных = АдресаНастроек.ИмяТекущегоШаблонаСКД;

		Если АдресаНастроек.Свойство("АдресХранилищаНастройкиКомпоновщика") Тогда
			АдресНастроекКомпоновкиДанных = АдресаНастроек.АдресХранилищаНастройкиКомпоновщика;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище()

	Возврат Справочники.ЭП_ОписанияПроверок.АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(Объект);

КонецФункции

#КонецОбласти

#КонецОбласти
